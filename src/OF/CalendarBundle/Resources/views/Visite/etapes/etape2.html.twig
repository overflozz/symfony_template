  {% if event.verrou ==1 %}
  <div class="row">
  <div class="col-xs-12">
  <div class="alert alert-warning z-depth-1">
    <span class="glyphicon glyphicon-lock"></span> Cette visite a été acceptée par EDF. Aucune modification sur son organisation n'est possible.
  </div>
  </div>
  </div>
  {% endif %}
<div class="" id="choixVisite">
	<div class="col-md-3 col-xs-12 pull-left " style="padding-left: 0px">
		<div class="panel panel-default">
		 	<div class="panel-heading">Aperçu : 
		 	</div>
		 	<div class="panel-body">

		 	<ul id="preview" style="padding-left: 0;list-style:none;">

		  	</ul>


		 	</div>
		 </div>

	</div>

	<div class="col-md-9 col-xs-12 pull-right" style="padding-right: 0px" >
		<div class="panel panel-default">
		 	<div class="panel-heading">
		 		Ordre de visite
		 	</div>
		 	<div class="panel-body">
<div class="alert alert-warning" id="avertissementHalle" style="display:none;"> <b>La Halle d'essais nécessite une validation de la part d'EDF</b>. Cela implique qu'il vous faudra attendre leur confirmation avant de pouvoir terminer le processus de visite. <br />Veillez à bien renseigner les descriptions pour les demandes de la Halle d'essais.
</div>
{% if event.verrou == 0 %}
   {{ form_start(form, {'attr' : {'class' : 'ajaxForm'}})  }}

 <ul id="elements-fields-list"  style=" padding-left: 0;" data-prototype="
 <div id='collapsingpanel' class='panel panel-default element' style='margin:auto; width:auto; margin-bottom : 10px;'>
	 <div class='panel-heading' style='height: 50px;'>
	   <div class='panel-title  col-md-12'>
        <span class='glyphicon glyphicon-move pull-left hidden-xs' style='margin-top:7px; margin-left:-7px;opacity:0.5;''></span>
        <div class='pull-right' style='width: 95%;line-height:45px;'>{{form_widget(form.elementsVisites.vars.prototype.titre, {'attr' : {'class' : ' titreInput browser-default', 'style' : 'margin-top:-9px;'}})|e }} 
        </div>
      </div>
	   </div>
	      	<div id='collapse' class='panel-default collapse'>
	        	<div class='panel-body'>
				
						<div class='col-md-12' style='padding:0px;''> 
							<div class='col-md-2 pull-left'>
								Durée :
							</div>
							<div class='col-md-5'>
								{{  form_widget(form.elementsVisites.vars.prototype.duree.hour, {'attr' : {'class' : 'hourInput browser-default'}})|e }}
							</div>
							<div class='col-md-5'>
								{{ form_widget(form.elementsVisites.vars.prototype.duree.minute, {'attr' : {'class' : 'minuteInput browser-default'}})|e  }}
							</div>
              <div class='col-xs-12'>
                {{ form_row(form.elementsVisites.vars.prototype.description, {'attr' : {'class' : ''}})|e  }}
              </div>
						</div>

				
		        </div>
	        	<div class='panel-footer' style='height: 50px;'></div>
	      	</div>
		</div>">
  {% else %}
  <ul id="elements-fields-list">
{% endif %}
   {% for elementVisite in form.elementsVisites %}

   		 <div id='collapsingpanel' class='panel panel-default element' style='margin:auto; width:auto; margin-bottom : 10px;'>
   <div class='panel-heading' style='height: 50px;'>
     <div class='panel-title  col-md-12'>
        <span class='glyphicon glyphicon-move pull-left hidden-xs' style='margin-top:7px; margin-left:-7px;opacity:0.5;''></span>
        <div class='pull-right' style='width: 95%;line-height:45px;'>{% if event.verrou == 0 %}{{form_widget(elementVisite.titre, {'attr' : {'class' : ' titreInput browser-default', 'style' : 'margin-top:-9px;'}}) }} {% else %}{{form_widget(elementVisite.titre, {'attr' : {'class' : ' titreInput browser-default','disabled':'disabled', 'style' : 'margin-top:-9px;'}}) }} {% endif %}
        </div>
      </div>
     </div>
          <div id='collapse' class='panel-default collapse'>
            <div class='panel-body'>
        
            <div class='col-md-12' style='padding:0px;''> 
              <div class='col-md-2 pull-left'>
                Durée : 
              </div>
              <div class='col-md-5 input-field'>{% if event.verrou == 0 %}
                {{  form_widget(elementVisite.duree.hour, {'attr' : {'class' : 'hourInput browser-default'}}) }}
                {% else %}
                {{  form_widget(elementVisite.duree.hour, {'attr' : {'class' : 'hourInput browser-default', 'disabled' : 'disabled'}}) }}
                {% endif %}
              </div>
              <div class='col-md-5 input-field'>{% if event.verrou == 0 %}
              {{ form_widget(elementVisite.duree.minute, {'attr' : {'class' : 'minuteInput browser-default'}})  }}
              {% else %}
              {{ form_widget(elementVisite.duree.minute, {'attr' : {'class' : 'minuteInput browser-default', 'disabled' : 'disabled'}})  }}

              {% endif %}
              
              </div>
              <div class='col-xs-12'>
              {% if event.verrou == 0 %}
                {{ form_row(elementVisite.description, {'attr' : {'class' : ''}}) }}
                {% else %}
                 {{ form_row(elementVisite.description, {'attr' : { 'disabled' : 'disabled'}})  }}
                 {% endif %}
              </div>
            </div>
        
            </div>
            <div class='panel-footer' style='height: 50px;'></div>
          </div>
    </div>

    {% endfor %}

</ul>{% if event.verrou == 0 %}
{{ form_widget(form.save, {'label': 'Enregistrer', 'attr' : {'class' : 'btn btn-primary pull-left', 'role' : 'valid'}}) }}
       <a  id="add_field" class="btn-floating btn-large waves-effect waves-light btn-primary btn pull-right"><i class="material-icons">add</i></a>
    {{ form_end(form) }}
{% else %}
</ul>{% endif %}		 	</div>
		</div>
	</div>
</div>
 <script>
  $(document).ready(function() {
    
  	// On récupère la balise <div> en question qui contient l'attribut « data-prototype » qui nous intéresse.
    var $container = $('#elements-fields-list');
    updatePreview($container);
    // on update au début et quand une valeur est changée dans les conf des différents éléments.

    $("#choixVisite").on("change", ".titreInput",function(){

        updatePreview($container);
    });
    $("#choixVisite").on("change", ".minuteInput",function(){

        updatePreview($container);
    });
    $("#choixVisite").on("change", ".hourInput",function(){

        updatePreview($container);
    });




    $( "#elements-fields-list" ).sortable({
      revert: true,
      stop: function(){

			updateIndex($container); // on met à jour l'ordre
			updatePreview($container);
      }
    });
    
    $( "#draggable" ).draggable({
		connectToSortable: "#elements-fields-list",
		helper: "clone",
		revert: "invalid",
		start  : function(event, ui){
 		},
		stop: function(event, ui){
			$(ui.helper).removeAttr("style"); // ui helper permet d'accéder à l'élement draggé.
		}
    });

    $( "ul, li" ).disableSelection();

	$('.panel-group').on("click", "#collapsingpanel .panel-heading",  function(){
		$(this).parent().find("#collapse").collapse('toggle');
	});
	

  
        // On définit un compteur unique pour nommer les champs qu'on va ajouter dynamiquement
   	var index = $container.find(':input').length;
    // On ajoute un nouveau champ à chaque clic sur le lien d'ajout.
    $('#add_field').click(function(e) {
      addCategory($container);
      updatePreview($container);
      e.preventDefault(); // évite qu'un # apparaisse dans l'URL
      return false;
    });
    // On ajoute un premier champ automatiquement s'il n'en existe pas déjà un (cas d'une nouvelle annonce par exemple).

    if (index == 0) {
      addCategory($container);
    } else {
      // S'il existe déjà des catégories, on ajoute un lien de suppression pour chacune d'entre elles

      $container.find('.element').each(function() {

              {% if event.verrou == 0 %}
        addDeleteLink($(this));
        {% endif %}

      });

    }

    function updateIndex($container){
    	var $compteur  = 0; // nouveau compteur pour mettre dans le bon ordre
    	$container.find('.element').each(function() {
    		$(this).find('.titreInput').attr('name', 'of_calendarbundle_event[elementsVisites]['+ $compteur + '][titre]' );
    		$(this).find('.titreInput').attr('id', 'of_calendarbundle_event_elementsVisites_'+ $compteur + '_titre' );
    		$(this).find('.dureeInput').attr('id', 'of_calendarbundle_event_elementsVisites_'+ $compteur + '_duree' );
    		$(this).find('.hourInput').attr('id', 'of_calendarbundle_event_elementsVisites_'+ $compteur + '_duree_hour' );   
    		$(this).find('.hourInput').attr('name', 'of_calendarbundle_event[elementsVisites]['+ $compteur + '][duree][hour]' );
    		$(this).find('.minuteInput').attr('id', 'of_calendarbundle_event_elementsVisites_'+ $compteur + '_duree_minute' );   
    		$(this).find('.minuteInput').attr('name', 'of_calendarbundle_event[elementsVisites]['+ $compteur + '][duree][minute]' );


        	$compteur += 1;
      });

    }

    function updatePreview($container){
    	var $titre;
      var $avertissementHalle = 0;
    	var $heure  = parseInt({{event.startDatetime|date("H", "Europe/Paris")}}) ;
    	var $minute = parseInt({{event.startDatetime|date("i", "Europe/Paris")}});
	   	var $replacment='<li><div class="dotElementVisite pull-left" style="margin-left:-6px;"></div> <b>{{event.startDatetime|date("H:i", "Europe/Paris")}}</b></li>';

    	$container.find('.element').each(function() {
    		$titre = $(this).find('.titreInput').val();

        if($titre == "Halle d’essais" && $avertissementHalle == 0 )
        {
          $avertissementHalle = 1;
         
          $('#avertissementHalle').show();
        }

        if($avertissementHalle == 0){
          $('#avertissementHalle').hide();
        }
    		$minute = $minute + parseInt($(this).find('.minuteInput :selected').attr('value'));
    		// Ensuite on effectue un ajout d'heure et application de modulo si minutes > 60
    		$heure = $heure + ($minute-$minute%60)/60;
    		$minute = $minute%60;
    		$heure = $heure + parseInt($(this).find('.hourInput :selected').attr('value'));
        $replacment+= ('<div class="elementPreview"><div class="titreElementVisite">'+ $titre + '</div><br /><li><div class="dotElementVisite pull-left"></div> ' +'<b>'+ $heure);
        if($minute<10){ // pour rajouter le 0 devant la minute.
          $replacment+= ('h0'+ $minute +' </b></li></div>');
        }else{
          $replacment+= ('h'+ $minute +' </b></li></div>');
        }
    	});
    	$('#preview').hide().html($replacment).fadeIn(1000);


    }
    // La fonction qui ajoute un formulaire CategoryType

    function addCategory($container) {

      // Dans le contenu de l'attribut « data-prototype », on remplace :

      // - le texte "__name__label__" qu'il contient par le label du champ

      // - le texte "__name__" qu'il contient par le numéro du champ

      var template = $container.attr('data-prototype')

        .replace(/__name__label__/g, 'Catégorie n°' + (index+1))

        .replace(/__name__/g,        index)

      ;


      // On crée un objet jquery qui contient ce template

      var $prototype = $(template);


      // On ajoute au prototype un lien pour pouvoir supprimer la catégorie

      addDeleteLink($prototype);

      // On ajoute le prototype modifié à la fin de la balise <div>
      $container.append($prototype);
      // Enfin, on incrémente le compteur pour que le prochain ajout se fasse avec un autre numéro
      index++;

    }


    // La fonction qui ajoute un lien de suppression d'une catégorie

    function addDeleteLink($prototype) {

      // Création du lien

      var $deleteLink = $('<a href="#" class="btn btn-danger red col-xs-12">Supprimer</a>');


      // Ajout du lien

      $prototype.find('.panel-footer').append($deleteLink);


      // Ajout du listener sur le clic du lien pour effectivement supprimer la catégorie

      $deleteLink.click(function(e) {
        $prototype.remove();
        e.preventDefault(); // évite qu'un # apparaisse dans l'URL
        return false;
      });

    }

  });

</script>