
<div class="panel-group" id="choixVisite">
	<div class="col-xs-3 pull-left ">
		<div class="panel panel-default">
		 	<div class="panel-heading">Aperçu : 
		 	</div>
		 	<div class="panel-body">

		 	<ul id="preview" style="padding-left: 0;list-style:none;">

		  	</ul>


		 	</div>
		 </div>

	</div>

	<div class="col-xs-9 pull-right" >
		<div class="panel panel-default">
		 	<div class="panel-heading">
		 		Ordre de visite
		 	</div>
		 	<div class="panel-body">
   {{ form_start(form, {'attr' : {'class' : 'ajaxForm'}})  }}
 <ul id="elements-fields-list"  style=" padding-left: 0;" data-prototype="
 <div id='collapsingpanel' class='panel panel-default element' style='margin:auto; width:auto; margin-bottom : 10px;'>
	      	<div class='panel-heading' style='height: 50px;'>
	        	<div class='panel-title  col-md-12'><span class='glyphicon glyphicon-move pull-left' style='margin-top:7px; margin-left:-7px;opacity:0.5;''></span><div class='pull-right' style='width: 95%;line-height:45px;'>{{  form_widget(form.elementsVisites.vars.prototype.titre)|e }}</div></div>
	     	</div>
	      	<div id='collapse' class='panel-default collapse'>
	        	<div class='panel-body'>
				
						<div class='col-md-12' style='padding:0px;''> 
							<div class='col-md-2 pull-left'>
								Durée
							</div>
							<div class='col-md-5'>
								{{  form_widget(form.elementsVisites.vars.prototype.duree.hour, {'attr' : {'class' : 'hourInput'}})|e }}
							</div>
							<div class='col-md-5'>
								{{ form_widget(form.elementsVisites.vars.prototype.duree.minute, {'attr' : {'class' : 'minuteInput'}})|e  }}
							</div>
						</div>
				
		        </div>
	        	<div class='panel-footer' style='height: 50px;'></div>
	      	</div>
		</div>">

   {% for elementVisite in form.elementsVisites %}

   		<div id="collapsingpanel" class="element panel panel-default " style="margin:auto; width:auto; margin-bottom : 10px;">
	      	<div class="panel-heading" style='height: 50px;'>
	        	<div class="panel-title col-md-12"><span class="glyphicon glyphicon-move pull-left" style="margin-top:7px; margin-left:-7px;opacity:0.5;"></span><div class="pull-right" style="width: 95%;line-height:45px;">{{ form_widget(elementVisite.titre) }}</div></div>

	     	</div>
	      	<div id="collapse" class="panel-default collapse">
	        	<div class="panel-body">
					
					<div class='col-md-12' style="padding:0px;"> 
						<div class='col-md-2 pull-left'>
							Durée :
						</div>
						<div class='col-md-5'>
							{{ form_widget(elementVisite.duree.hour, {'attr' : {'class' : 'hourInput'}}) }}
						</div>
						<div class='col-md-5'>
							{{ form_widget(elementVisite.duree.minute, {'attr' : {'class': 'minuteInput'}} ) }}
						</div>
					</div>
					
		        </div>
	        	<div class="panel-footer" style='height: 50px;'></div>
	      	</div>
		</div>

    {% endfor %}
</ul>{{ form_widget(form.save, {'label': 'Enregistrer', 'attr' : {'class' : 'btn btn-primary', 'role' : 'valid'}}) }}
     <a href="#" id="add_field" class="btn btn-primary btn-lg"><span class="glyphicon glyphicon-plus"></span></a>
    {{ form_end(form) }}



		 
		 	</div>
		</div>
	</div>
</div>
 <script>
  $(document).ready(function() {
  	// On récupère la balise <div> en question qui contient l'attribut « data-prototype » qui nous intéresse.
    var $container = $('#elements-fields-list');
    updatePreview($container);
    // on update au début et quand une valeur est changée dans les conf des différents éléments.
    $(".hourInput").change(function(){

        updatePreview($container);
    });
    $(".minuteInput").change(function(){

        updatePreview($container);
    });
    $(".titreInput").change(function(){

        updatePreview($container);
    });




    $( "#elements-fields-list" ).sortable({
      revert: true,
      stop: function(){

			updateIndex($container); // on met à jour l'ordre
			updatePreview($container);
      }
    });

    $( "#draggable" ).draggable({
		connectToSortable: "#elements-fields-list",
		helper: "clone",
		revert: "invalid",
		start  : function(event, ui){
 		},
		stop: function(event, ui){
			$(ui.helper).removeAttr("style"); // ui helper permet d'accéder à l'élement draggé.
		}
    });

    $( "ul, li" ).disableSelection();

	$('.panel-group').on("click", "#collapsingpanel .panel-heading",  function(){
		$(this).parent().find("#collapse").collapse('toggle');
	});
	

  
        // On définit un compteur unique pour nommer les champs qu'on va ajouter dynamiquement
   	var index = $container.find(':input').length;
    // On ajoute un nouveau champ à chaque clic sur le lien d'ajout.
    $('#add_field').click(function(e) {
      addCategory($container);
      updatePreview($container);
      e.preventDefault(); // évite qu'un # apparaisse dans l'URL
      return false;
    });
    // On ajoute un premier champ automatiquement s'il n'en existe pas déjà un (cas d'une nouvelle annonce par exemple).

    if (index == 0) {
      addCategory($container);
    } else {
      // S'il existe déjà des catégories, on ajoute un lien de suppression pour chacune d'entre elles

      $container.find('.element').each(function() {

        addDeleteLink($(this));

      });

    }

    function updateIndex($container){
    	var $compteur  = 0; // nouveau compteur pour mettre dans le bon ordre
    	$container.find('.element').each(function() {
    		$(this).find('.titreInput').attr('name', 'of_calendarbundle_event[elementsVisites]['+ $compteur + '][titre]' );
    		$(this).find('.titreInput').attr('id', 'of_calendarbundle_event_elementsVisites_'+ $compteur + '_titre' );
    		$(this).find('.dureeInput').attr('id', 'of_calendarbundle_event_elementsVisites_'+ $compteur + '_duree' );
    		$(this).find('.hourInput').attr('id', 'of_calendarbundle_event_elementsVisites_'+ $compteur + '_duree_hour' );   
    		$(this).find('.hourInput').attr('name', 'of_calendarbundle_event[elementsVisites]['+ $compteur + '][duree][hour]' );
    		$(this).find('.minuteInput').attr('id', 'of_calendarbundle_event_elementsVisites_'+ $compteur + '_duree_minute' );   
    		$(this).find('.minuteInput').attr('name', 'of_calendarbundle_event[elementsVisites]['+ $compteur + '][duree][minute]' );


        	$compteur += 1;
      });

    }

    function updatePreview($container){
    	var $titre;
    	var $heure  = parseInt({{event.startDatetime|date("H", "Europe/Paris")}}) ;
    	var $minute = parseInt({{event.startDatetime|date("i", "Europe/Paris")}});
	   	var $replacment='<li><div class="dotElementVisite pull-left" style="margin-left:-6px;"></div> <b>{{event.startDatetime|date("H:i", "Europe/Paris")}}</b></li>';

    	$container.find('.element').each(function() {
    		$titre = $(this).find('.titreInput').val();
    		$minute = $minute + parseInt($(this).find('.minuteInput :selected').attr('value'));
    		// Ensuite on effectue un ajout d'heure et application de modulo si minutes > 60
    		$heure = $heure + ($minute-$minute%60)/60;
    		$minute = $minute%60;
    		$heure = $heure + parseInt($(this).find('.hourInput :selected').attr('value'));
        $replacment+= ('<div class="elementPreview"><div class="titreElementVisite">'+ $titre + '</div><br /><li><div class="dotElementVisite pull-left"></div> ' +'<b>'+ $heure);
        if($minute<10){ // pour rajouter le 0 devant la minute.
          $replacment+= ('h0'+ $minute +' </b></li></div>');
        }else{
          $replacment+= ('h'+ $minute +' </b></li></div>');
        }
    	});
    	$('#preview').hide().html($replacment).fadeIn(1000);


    }
    // La fonction qui ajoute un formulaire CategoryType

    function addCategory($container) {

      // Dans le contenu de l'attribut « data-prototype », on remplace :

      // - le texte "__name__label__" qu'il contient par le label du champ

      // - le texte "__name__" qu'il contient par le numéro du champ

      var template = $container.attr('data-prototype')

        .replace(/__name__label__/g, 'Catégorie n°' + (index+1))

        .replace(/__name__/g,        index)

      ;


      // On crée un objet jquery qui contient ce template

      var $prototype = $(template);


      // On ajoute au prototype un lien pour pouvoir supprimer la catégorie

      addDeleteLink($prototype);

      // On ajoute le prototype modifié à la fin de la balise <div>
      $container.append($prototype);
      // Enfin, on incrémente le compteur pour que le prochain ajout se fasse avec un autre numéro
      index++;

    }


    // La fonction qui ajoute un lien de suppression d'une catégorie

    function addDeleteLink($prototype) {

      // Création du lien

      var $deleteLink = $('<a href="#" class="btn btn-danger col-xs-12">Supprimer</a>');


      // Ajout du lien

      $prototype.find('.panel-footer').append($deleteLink);


      // Ajout du listener sur le clic du lien pour effectivement supprimer la catégorie

      $deleteLink.click(function(e) {
        $prototype.remove();
        e.preventDefault(); // évite qu'un # apparaisse dans l'URL
        return false;
      });

    }

  });

</script>